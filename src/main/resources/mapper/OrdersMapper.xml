<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lllebin.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.lllebin.domain.Orders">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="address_book_id" jdbcType="BIGINT" property="addressBookId" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="checkout_time" jdbcType="TIMESTAMP" property="checkoutTime" />
    <result column="pay_method" jdbcType="INTEGER" property="payMethod" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="consignee" jdbcType="VARCHAR" property="consignee" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `number`, `status`, user_id, address_book_id, order_time, checkout_time, pay_method, 
    amount, remark, phone, address, user_name, consignee
  </sql>
  <select id="selectByExample" parameterType="com.lllebin.domain.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from orders
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lllebin.domain.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lllebin.domain.Orders">
    insert into orders (id, `number`, `status`, 
      user_id, address_book_id, order_time, 
      checkout_time, pay_method, amount, 
      remark, phone, address, 
      user_name, consignee)
    values (#{id,jdbcType=BIGINT}, #{number,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{userId,jdbcType=BIGINT}, #{addressBookId,jdbcType=BIGINT}, #{orderTime,jdbcType=TIMESTAMP}, 
      #{checkoutTime,jdbcType=TIMESTAMP}, #{payMethod,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, 
      #{remark,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lllebin.domain.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="addressBookId != null">
        address_book_id,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="checkoutTime != null">
        checkout_time,
      </if>
      <if test="payMethod != null">
        pay_method,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="consignee != null">
        consignee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="addressBookId != null">
        #{addressBookId,jdbcType=BIGINT},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkoutTime != null">
        #{checkoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payMethod != null">
        #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null">
        #{consignee,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lllebin.domain.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.number != null">
        `number` = #{row.number,jdbcType=VARCHAR},
      </if>
      <if test="row.status != null">
        `status` = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
      <if test="row.addressBookId != null">
        address_book_id = #{row.addressBookId,jdbcType=BIGINT},
      </if>
      <if test="row.orderTime != null">
        order_time = #{row.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.checkoutTime != null">
        checkout_time = #{row.checkoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.payMethod != null">
        pay_method = #{row.payMethod,jdbcType=INTEGER},
      </if>
      <if test="row.amount != null">
        amount = #{row.amount,jdbcType=DECIMAL},
      </if>
      <if test="row.remark != null">
        remark = #{row.remark,jdbcType=VARCHAR},
      </if>
      <if test="row.phone != null">
        phone = #{row.phone,jdbcType=VARCHAR},
      </if>
      <if test="row.address != null">
        address = #{row.address,jdbcType=VARCHAR},
      </if>
      <if test="row.userName != null">
        user_name = #{row.userName,jdbcType=VARCHAR},
      </if>
      <if test="row.consignee != null">
        consignee = #{row.consignee,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set id = #{row.id,jdbcType=BIGINT},
      `number` = #{row.number,jdbcType=VARCHAR},
      `status` = #{row.status,jdbcType=INTEGER},
      user_id = #{row.userId,jdbcType=BIGINT},
      address_book_id = #{row.addressBookId,jdbcType=BIGINT},
      order_time = #{row.orderTime,jdbcType=TIMESTAMP},
      checkout_time = #{row.checkoutTime,jdbcType=TIMESTAMP},
      pay_method = #{row.payMethod,jdbcType=INTEGER},
      amount = #{row.amount,jdbcType=DECIMAL},
      remark = #{row.remark,jdbcType=VARCHAR},
      phone = #{row.phone,jdbcType=VARCHAR},
      address = #{row.address,jdbcType=VARCHAR},
      user_name = #{row.userName,jdbcType=VARCHAR},
      consignee = #{row.consignee,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lllebin.domain.Orders">
    update orders
    <set>
      <if test="number != null">
        `number` = #{number,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="addressBookId != null">
        address_book_id = #{addressBookId,jdbcType=BIGINT},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkoutTime != null">
        checkout_time = #{checkoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payMethod != null">
        pay_method = #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null">
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lllebin.domain.Orders">
    update orders
    set `number` = #{number,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      address_book_id = #{addressBookId,jdbcType=BIGINT},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      checkout_time = #{checkoutTime,jdbcType=TIMESTAMP},
      pay_method = #{payMethod,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      consignee = #{consignee,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>